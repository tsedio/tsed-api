# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build & Release

on:
  push:
  pull_request:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile --network-timeout 500000
      - name: Run lint
        run: yarn lint

  test-front:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile --network-timeout 500000
      - name: Run test
        run: yarn test:front

  test-server:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile --network-timeout 500000
      - name: Run test
        run: yarn test:server

  release:
    runs-on: ubuntu-latest
    needs: [lint, test-front, test-server]
    if: ${{ github.event_name != 'pull_request' && contains(github.ref, 'master') }}

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile --network-timeout 500000
      - name: Release packages
        env:
          CI: true
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: yarn release
      - uses: actions/upload-artifact@v4
        with:
          name: packages
          path: |
            package.json
            packages/*/package.json

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [lint, test-front, test-server]
    if: ${{ github.event_name != 'pull_request' && (contains(github.ref, 'staging') || contains(github.ref, 'master'))}}

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Deploy to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          APP: tsed-api-staging
        run: |
          echo "Deploying to Heroku..."
          echo "Heroku login"

          npx heroku@7.67.2 container:login

          echo "Docker login & build"

          docker login --username=_ --password=${HEROKU_API_KEY} registry.heroku.com
          docker build . -t registry.heroku.com/${APP}/web

          echo "Push docker image"

          docker push registry.heroku.com/${APP}/web

          echo "Heroku deploy"
          npx heroku@7.67.2 container:release web --app ${APP}

  #      - uses: actions/upload-artifact@v4
  #        with:
  #          name: packages
  #          path: |
  #            package.json
  #            packages/*/package.json

  deploy-production:
    runs-on: ubuntu-latest
    needs: [release]
    if: ${{ github.event_name != 'pull_request' && contains(github.ref, 'master') }}

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/download-artifact@v4
        with:
          name: packages

      - name: Deploy to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          APP: tsed-api
        run: |
          echo "Deploying to Heroku..."
          echo "Heroku login"

          npx heroku@7.67.2 container:login

          echo "Docker login & build"

          docker login --username=_ --password=${HEROKU_API_KEY} registry.heroku.com
          docker build . -t registry.heroku.com/${APP}/web

          echo "Push docker image"

          docker push registry.heroku.com/${APP}/web

          echo "Heroku deploy"
          npx heroku@7.67.2 container:release web --app ${APP}

#      - uses: actions/upload-artifact@v4
#        with:
#          name: packages
#          path: |
#            package.json
#            packages/*/package.json
